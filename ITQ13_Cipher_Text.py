#     Given a keyword of unique alphabets and a text, write a program to encrypt the text using the keyword. 
#     Cipher text is generated by arranging the elements of the text below the keyword and combining them column wise.
#     The columns should be picked based on the alphabetical order of the characters in the keyword Assume,
#     given keyword is PAS and text is ILIKECODE, place all the characters of the text in the below format.
#     PAS ILI KEC ODE The cipher text will be ALEDPIKOSICE
#
# Sample Input 0:
#     PAS
#     ILIKECODE
# Sample Output 0:
#     ALEDPIKOSICE 
# Explanation:
#     Transpose given input to -
#       [['P','A','S'],
#        ['I','L','I'],
#        ['K','E','C'],
#        ['O','D','E']]
#
#     Final Output -
#       [['A','P','S'],
#        ['L','I','I'],
#        ['E','K','C'],
#        ['D','O','E']]


# My Solution:
k = input()
s = input()
mat = [k] + [ s[i:i+len(k)] for i in range(0,len(s),len(k)) ]
c = ''
for i in sorted(list(k)):
    c += ''.join([ mat[j][k.find(i)] for j in range(len(mat)) if k.find(i) < len(mat[j])])
print(c)
